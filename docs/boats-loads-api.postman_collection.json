{
	"info": {
		"_postman_id": "55833985-0fdb-4689-8ea3-61987701d316",
		"name": "boats-loads-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "get all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(200, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/users",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "create a boat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// set boat_id and boat environment var",
							"pm.environment.set(\"boat_id1\", pm.response.json()[\"id\"]);",
							"",
							"// test correct status code is returned",
							"testRequestStatus(201, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Odyssey\",\n  \"type\": \"Yatch\",\n  \"length\": 99\n}"
				},
				"url": {
					"raw": "{{app_url}}/boats",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "create a boat (invalid missing attributes)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(400, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Odyssey\",\n  \"length\": 99\n}"
				},
				"url": {
					"raw": "{{app_url}}/boats",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "create a boat (invalid accept header)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(406, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/atom+xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Odyssey\",\n  \"length\": 99\n}"
				},
				"url": {
					"raw": "{{app_url}}/boats",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "create a boat (invalid content-type)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(415, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/atom+xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Odyssey\",\n  \"type\": \"Yatch\",\n  \"length\": 99\n}"
				},
				"url": {
					"raw": "{{app_url}}/boats",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all boats",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(200, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/boats",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all boats (invalid accept header)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(406, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/boats",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "get a boat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(200, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get a boat (invalid boat_id)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(404, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/boats/{{invalid_boat_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{invalid_boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get a boat (invalid accept header)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(406, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "edit a boat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(200, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Going Mary\",\n  \"type\": \"Updated Boat\"\n}\n"
				},
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "edit a boat (invalid boat_id)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(404, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Going Mary\",\n  \"type\": \"Updated Boat\"\n}\n"
				},
				"url": {
					"raw": "{{app_url}}/boats/{{invalid_boat_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{invalid_boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "edit a boat (invalid accept header)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(406, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Going Mary\",\n  \"type\": \"Updated Boat\"\n}\n"
				},
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "edit a boat (invalid content-type)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(415, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Going Mary\",\n  \"type\": \"Updated Boat\"\n}\n"
				},
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "replace a boat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(200, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Thousand Sunny\",\n  \"type\": \"Updated Boat\",\n  \"length\": 150\n}"
				},
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "replace a boat (invalid boat_id)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(404, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Invalid Boat\",\n  \"type\": \"Updated Boat\",\n  \"length\": 150\n}"
				},
				"url": {
					"raw": "{{app_url}}/boats/{{invalid_boat_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{invalid_boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "replace a boat (invalid accept header)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(406, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Invalid Boat\",\n  \"type\": \"Updated Boat\",\n  \"length\": 150\n}"
				},
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "replace a boat (invalid content-type)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(415, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Invalid Boat\",\n  \"type\": \"Updated Boat\",\n  \"length\": 150\n}"
				},
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "create a load",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// set boat_id and boat environment var",
							"pm.environment.set(\"load_id1\", pm.response.json()[\"id\"]);",
							"",
							"// test correct status code is returned",
							"testRequestStatus(201, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"volume\": 5,\n  \"content\": \"LEGO Blocks\"\n}"
				},
				"url": {
					"raw": "{{app_url}}/loads",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "create a load (invalid JWT)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(401, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"volume\": 5,\n  \"content\": \"LEGO Blocks\"\n}"
				},
				"url": {
					"raw": "{{app_url}}/loads",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "create a load (invalid missing attributes)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(400, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"content\": \"LEGO Blocks\"\n}"
				},
				"url": {
					"raw": "{{app_url}}/loads",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "create a load (invalid accept header)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(406, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"volume\": 5,\n  \"content\": \"LEGO Blocks\"\n}"
				},
				"url": {
					"raw": "{{app_url}}/loads",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "create a load (invalid content-type)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(415, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"volume\": 5,\n  \"content\": \"LEGO Blocks\"\n}"
				},
				"url": {
					"raw": "{{app_url}}/loads",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all loads",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(200, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/loads",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all loads (user2)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(200, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/loads",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all loads (invalid accept header)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(406, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/loads",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all loads (invalid JWT)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(401, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/loads",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "get a load",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(200, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get a load (invalid jwt)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(401, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get a load (not the owner)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(403, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get a load (invalid load_id)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(404, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/loads/{{invalid_load_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{invalid_load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get a load (invalid accept header)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(406, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{app_url}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "edit a load",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(200, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"content\": \"bananas\"\n}"
				},
				"url": {
					"raw": "{{app_url}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "edit a load (invalid jwt)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(401, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"content\": \"bananas\"\n}"
				},
				"url": {
					"raw": "{{app_url}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "edit a load (not the owner)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(403, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"content\": \"bananas\"\n}"
				},
				"url": {
					"raw": "{{app_url}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "edit a load (invalid load_id)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(404, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"content\": \"bananas\"\n}"
				},
				"url": {
					"raw": "{{app_url}}/loads/{{invalid_load_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{invalid_load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "edit a load (invalid accept header)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(406, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"content\": \"bananas\"\n}"
				},
				"url": {
					"raw": "{{app_url}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "edit a load (invalid content-type)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(415, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"content\": \"bananas\"\n}"
				},
				"url": {
					"raw": "{{app_url}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "replace a load",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(200, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"volume\": 10,\n  \"content\": \"Replaced Load\"\n}"
				},
				"url": {
					"raw": "{{app_url}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "replace a load (invalid missing attributes)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(400, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"volume\": 10\n}"
				},
				"url": {
					"raw": "{{app_url}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "replace a load (invalid jwt)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(401, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"volume\": 10,\n  \"content\": \"Replaced Load\"\n}"
				},
				"url": {
					"raw": "{{app_url}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "replace a load (not the owner)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(403, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"volume\": 10,\n  \"content\": \"Replaced Load\"\n}"
				},
				"url": {
					"raw": "{{app_url}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "replace a load (invalid load_id)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(404, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"volume\": 10,\n  \"content\": \"Replaced Load\"\n}"
				},
				"url": {
					"raw": "{{app_url}}/loads/{{invalid_load_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{invalid_load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "replace a load (invalid accept header)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(406, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"volume\": 10,\n  \"content\": \"Replaced Load\"\n}"
				},
				"url": {
					"raw": "{{app_url}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "replace a load (invalid content-type)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(415, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"volume\": 10,\n  \"content\": \"Replaced Load\"\n}"
				},
				"url": {
					"raw": "{{app_url}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "add a load to a boat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(204, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id1}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id1}}",
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "create a boat (boat2)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// set boat_id and boat environment var",
							"pm.environment.set(\"boat_id2\", pm.response.json()[\"id\"]);",
							"",
							"// test correct status code is returned",
							"testRequestStatus(201, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Odyssey_02\",\n  \"type\": \"Yatch\",\n  \"length\": 99\n}"
				},
				"url": {
					"raw": "{{app_url}}/boats",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all loads on a boat (not supported)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(405, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id1}}/loads",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id1}}",
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "get a load on a boat (not supported)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(405, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id1}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id1}}",
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "edit a load on a boat (not supported from this endpoint)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(405, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id1}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id1}}",
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "create a load on a boat (not supported from this endpoint)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(405, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id1}}/loads",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id1}}",
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "add a load to a boat (invalid load already on a boat)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(403, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id2}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id2}}",
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "add a load to a boat (invalid load)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(404, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id1}}/loads/{{invalid_load_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id1}}",
						"loads",
						"{{invalid_load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "add a load to a boat (invalid boat)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(404, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/boats/{{invalid_boat_id}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{invalid_boat_id}}",
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "add a load to a boat (invalid boat & load)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(404, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/boats/{{invalid_boat_id}}/loads/{{invalid_load_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{invalid_boat_id}}",
						"loads",
						"{{invalid_load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "remove load from boat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(204, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id1}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id1}}",
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "remove load from boat (invalid boat_id)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(404, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{invalid_boat_id}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{invalid_boat_id}}",
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "remove load from boat (invalid load_id)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(404, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id1}}/loads/{{invalid_load_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id1}}",
						"loads",
						"{{invalid_load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "remove load from boat (invalid load_id & boat_id)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(404, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{invalid_boat_id}}/loads/{{invalid_load_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{invalid_boat_id}}",
						"loads",
						"{{invalid_load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete a load (not the owner)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(403, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete a load",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(204, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete a load (invalid load_id)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(404, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete a load (invalid jwt)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(401, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/loads/{{load_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete boat1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(204, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete boat1 (invalid boat_id)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(404, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{invalid_boat_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{invalid_boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete boat2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test correct status code is returned",
							"testRequestStatus(204, pm);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id2}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id2}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// reusable funtion for testing status codes",
					"Object.prototype.testRequestStatus = function(status, pm){",
					"    pm.test(`check request status of ${pm.info.requestName}, expected ${status}, received ${pm.response.code}`, function(){",
					"        pm.expect(pm.response.code).to.be.equal(status);",
					"    });",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}